import { Insight, Evidence } from './journey-map'

// Source types for research data
export type ResearchSourceType = 'nps' | 'csat' | 'ces' | 'interview' | 'survey' | 'manual'

// Source metadata for tracking where insight came from
export interface InsightSource {
  type: ResearchSourceType
  sourceId: string // ID to original research data
  sourceName: string // e.g., "NPS Q1 2025", "User Interview 2025-01-15"
  confidence?: number // 0-1, how confident is the AI about placement
  autoGenerated: boolean // Was this insight auto-generated or manually created
}

// Placement suggestion from AI/matcher
export interface PlacementSuggestion {
  rowId: string
  cellId: string
  stageId: string
  confidence: number // 0-1
  reason: string // Human-readable explanation
  keywords: string[] // Keywords that led to this suggestion
  method: 'ai' | 'keyword' // Which method was used to generate this suggestion
}

// Research data that can be imported
export interface ImportableResearchData {
  id: string
  type: ResearchSourceType
  name: string
  description?: string
  collectedAt: string
  itemCount: number // Number of responses/items
  data: NPSData | CSATData | InterviewData | SurveyData
  folderId?: string // Optional research project ID
}

// NPS specific data structure
export interface NPSData {
  id: string
  campaignName: string
  collectedAt: string
  responses: NPSResponse[]
}

export interface NPSResponse {
  id: string
  score: number // 0-10
  comment?: string
  respondentId?: string
  respondentEmail?: string
  date: string
}

// CSAT specific data structure
export interface CSATData {
  id: string
  campaignName: string
  collectedAt: string
  responses: CSATResponse[]
}

export interface CSATResponse {
  id: string
  score: number // 1-5 typically
  comment?: string
  category?: string // e.g., "Support", "Product", "Delivery"
  respondentId?: string
  date: string
}

// CES specific data structure
export interface CESData {
  id: string
  campaignName: string
  collectedAt: string
  responses: CESResponse[]
}

export interface CESResponse {
  id: string
  score: number // 1-7 typically (effort score)
  comment?: string
  task?: string // What task was the customer trying to complete
  respondentId?: string
  date: string
}

// Interview specific data structure
export interface InterviewData {
  id: string
  interviewName: string
  conductedAt: string
  participant: {
    id: string
    name?: string
    email?: string
  }
  transcript?: string
  highlights: InterviewHighlight[]
}

export interface InterviewHighlight {
  id: string
  quote: string
  timestamp?: string
  category?: 'pain-point' | 'opportunity' | 'insight' | 'positive' | 'negative'
  tags?: string[]
}

// Survey specific data structure
export interface SurveyData {
  id: string
  surveyName: string
  collectedAt: string
  responses: SurveyResponse[]
}

export interface SurveyResponse {
  id: string
  answers: {
    questionId: string
    question: string
    answer: string | number | string[]
  }[]
  respondentId?: string
  date: string
}

// Generated insight with placement suggestions
export interface GeneratedInsight extends Omit<Insight, 'id' | 'created_at'> {
  tempId: string // Temporary ID before saving
  source: InsightSource
  suggestedPlacements: PlacementSuggestion[]
  autoGenerated: boolean
  generationMethod?: 'ai' | 'keyword' // Which method was used to generate title/summary
}

// Import result
export interface ImportResult {
  success: boolean
  insights: GeneratedInsight[]
  errors?: string[]
  warnings?: string[]
}

// Import configuration
export interface ImportConfig {
  sourceType: ResearchSourceType
  autoAcceptHighConfidence?: boolean // Auto-accept placements with confidence > 0.9
  minimumConfidence?: number // Don't show suggestions below this threshold
  generateTitle?: boolean // Auto-generate titles from content
  groupBySeverity?: boolean // Group insights by severity
}
